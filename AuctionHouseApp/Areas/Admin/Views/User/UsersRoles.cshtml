@model IEnumerable<IdentityUser>
@using AuctionHouseApp.Utility
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _userManager
@inject AuctionHouseApp.Data.ApplicationDbContext _db


@{
	ViewData["Title"] = "UsersRoles";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<div class="border backgroundDark">
	<div class="row">
		<div class="col-6">
			<h2 class="text-info"> Users List</h2>
		</div>
		<div class="col-6 text-right">
			<a asp-area="Identity" asp-page="/Account/Register" class="btn btn-info">
				<i class="fas fa-plus"></i> &nbsp; New user with Role registration
			</a>
		</div>
	</div>
	<br />
	<div>
		@if (Model.Count() > 0)
		{
			<table class="table table-striped border">
				<tr>
					<th>
						@Html.DisplayNameFor(c => c.Email)
					</th>
					<th>
						@Html.DisplayNameFor(u => u.Id)
					</th>
					<th>
						@{ var s = new GameUser(); }
						@Html.DisplayNameFor(c => s.Cash)
					</th>
					<th>
						@Html.DisplayNameFor(c => s.RoleName)
					</th>
					<th></th>
				</tr>
				@foreach (var user in Model)
				{
					<tr>
						<td>
							@Html.DisplayFor(c => user.Email)
						</td>
						<td>
							@Html.DisplayFor(u => user.Id)
						</td>
						<td>
							@{var u = await _db.GameUserDb.FindAsync(user.Id);}
							<span>@u.Cash</span>
						</td>
						<td>

							@{
								var sds = _userManager.GetRolesAsync(user).Result.ElementAt(0).ToString();
							}
							<span>@sds</span>
						</td>
						<td>
							<a class="btn btn-success text-white" asp-action="Lock" asp-route-id="@user.Id">
								<i class="fas fa-lock-open"></i>
							</a>
						</td>
					</tr>
				}
			</table>
		}
		else
		{
			<span>No user exists...</span>
		}
	</div>
</div>



